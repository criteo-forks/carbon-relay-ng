name: Builds and Releases on tag

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  TAG_NAME: ${{github.ref_name}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.12.0'
      - name: Build
        run: make
      - name: Test
        run: make test
      - name: Bundle
        run: |
          tar cvzf carbon-relay-ng-${TAG_NAME:1}-linux-amd64.tar.gz carbon-relay-ng
          echo `sha256sum carbon-relay-ng-*.tar.gz` > sha256
          echo "VERSION=${TAG_NAME#v}" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./carbon-relay-ng-${{env.VERSION}}-linux-amd64.tar.gz
          asset_name: carbon-relay-ng-${{env.VERSION}}-linux-amd64.tar.gz
          asset_content_type: application/zip
      - name: Upload Release Asset checksum
        id: upload-release-asset-checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sha256
          asset_name: sha256
          asset_content_type: text

